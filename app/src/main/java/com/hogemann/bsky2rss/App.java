/*
 * This source file was generated by the Gradle 'init' task
 */
package com.hogemann.bsky2rss;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.json.JsonMapper;
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
import com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer;
import com.hogemann.bsky2rss.bot.Rss2BskyService;
import com.hogemann.bsky2rss.bot.persistence.JsonFileRepository;
import com.hogemann.bsky2rss.bsky.BlueSkyService;
import com.hogemann.bsky2rss.rss.RssService;
import okhttp3.OkHttpClient;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.time.Instant;

public class App {

    private static final Logger LOG = LoggerFactory.getLogger(App.class);

    private static final String BASE_API = "https://bsky.social/xrpc";

    public static void main(String[] args) {
        try {
            rss2BskyService().run();
        } catch (Exception e) {
            LOG.error("Error running service", e);
        }
    }

    private static Rss2BskyService rss2BskyService() {
        final String jsonPath = System.getenv("JSON_PATH");
        final OkHttpClient client = new OkHttpClient();
        final ObjectMapper mapper = new JsonMapper();
        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
        final JavaTimeModule javaTimeModule = new JavaTimeModule();
        javaTimeModule.addDeserializer(Instant.class, InstantDeserializer.INSTANT);
        mapper.registerModule(javaTimeModule);
        return new Rss2BskyService(
                new RssService(client),
                new BlueSkyService(
                        BASE_API,
                        client,
                        mapper),
                new JsonFileRepository(
                        mapper,
                        jsonPath
                )
        );
    }

}
